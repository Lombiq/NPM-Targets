<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target
    Name="NpmInstall"
    Inputs="$(PackageJson)"
    Outputs="$(NpmInstallStampFile)"
    Condition="'$(ExecNpmInstallCommand)' == 'true' AND Exists($(PackageJson))">

    <!-- Check if pnpm is installed. -->
    <Exec Command="pnpm -v" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="PnpmInstalledExitCode" />
    </Exec>

    <Message Text="NPM-TARGETS: Calling pnpm install in $(NpmTargetsWorkingDirectory)" Importance="High" />
    <!-- Use pnpm if installed. -->
    <Exec Command="$(PnpmInstallCommand)"
          Condition="'$(PnpmInstalledExitCode)' == '0'"
          WorkingDirectory="$(NpmTargetsWorkingDirectory)"
          EnvironmentVariables="@(NpmCommandsEnvironmentVariables)" />
    <!-- Otherwise use regular npm. -->
    <Exec Command="$(NpmInstallCommand)"
          Condition="'$(PnpmInstalledExitCode)' != '0'"
          WorkingDirectory="$(NpmTargetsWorkingDirectory)"
          EnvironmentVariables="@(NpmCommandsEnvironmentVariables)" />

    <!-- Ensure that the node_modules folder exists because we use it for our stamp files. -->
    <MakeDir Directories="$(NodeModulesFolderPath)" Condition="!Exists($(NodeModulesFolderPath))" />
    <Touch Files="$(NpmInstallStampFile)" AlwaysCreate="true" Condition="'$(CreateNpmInstallStampFile)' == 'true'" />
  </Target>

  <Target
    Name="DeleteDotnetPrebuildStampFile"
    AfterTargets="Clean"
    Condition="Exists($(NpmDotnetPrebuildStampFile))">
    <Delete Files="$(NpmDotnetPrebuildStampFile)" />
  </Target>

  <Target
    Name="NpmDotnetPostclean"
    AfterTargets="Clean"
    Condition="'$(ExecDotnetPostcleanCommand)' == 'true' AND Exists($(PackageJson)) AND Exists($(NpmTargetsWorkingDirectory))">
    <Exec Command="$(NpmDotnetPostcleanCommand)"
          WorkingDirectory="$(NpmTargetsWorkingDirectory)"
          EnvironmentVariables="@(NpmCommandsEnvironmentVariables)"
          IgnoreExitCode="true"
          IgnoreStandardErrorWarningFormat="true" />
  </Target>

  <Target
    Name="NpmDotnetPrebuild"
    AfterTargets="AfterResolveReferences;InitCommonNodeModules"
    BeforeTargets="EmbeddModuleAssets;OrchardCoreEmbedModuleAssets;Compile"
    Inputs="@(NpmDotnetPrebuildWatchedFiles)"
    Outputs="$(NpmDotnetPrebuildStampFile)"
    Condition="'$(ExecDotnetPrebuildCommand)' == 'true' AND Exists($(PackageJson))">
    <Exec Command="$(NpmDotnetPrebuildCommand)"
          ConsoleToMSBuild="true"
          WorkingDirectory="$(NpmTargetsWorkingDirectory)"
          EnvironmentVariables="@(NpmCommandsEnvironmentVariables)">
      <Output TaskParameter="ConsoleOutput" PropertyName="PrebuildOutput" />
    </Exec>
    <Touch Files="$(NpmDotnetPrebuildStampFile)"
           Condition="'$(CreateDotnetPrebuildStampFile)' == 'true'"
           AlwaysCreate="true" />
  </Target>

</Project>
